# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        if not root:
            return True
        queue=[(root.left,root.right)]
        while queue:
            left,right=queue.pop(0)
            if not left and not right:
                continue
            if not left or not right:
                return False
            if left.val!=right.val:
                return False
            queue.append((left.left,right.right))
            queue.append((left.right,right.left))
        return True
class Solution(object):
    def isSymmetric(self, root):
        def is_mirror(left,right):
            if not left and not right:
                return True
            if not left or not right:
                return False
            return left.val==right.val and is_mirror(left.left,right.right) and is_mirror(left.right,right.left)
        return is_mirror(root.left,root.right)
        
