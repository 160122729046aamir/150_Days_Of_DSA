# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if not head or not head.next:
            return head
        tail=head
        size=1
        while tail.next:
            tail=tail.next
            size+=1
        k=k%size
        if k==0:
            return head
        last=size-k
        current=head
        i=1
        while i<last:
            current=current.next
            i+=1
        new_head=current.next
        current.next=None
        tail.next=head
        return new_head
