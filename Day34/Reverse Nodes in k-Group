# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if not head or not head.next:
            return head
        arr=[]
        current=head
        while current:
            arr.append(current.val)
            current=current.next
        n=len(arr)
        i=0
        while i+k<=n:
            arr[i:i+k]=arr[i:i+k][::-1]
            i+=k
        dummy=ListNode()
        tail=dummy
        for j in arr:
            tail.next=ListNode(j)
            tail=tail.next
        return dummy.next
