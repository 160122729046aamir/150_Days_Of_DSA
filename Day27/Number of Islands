class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if not grid : return 0
        rows,cols=len(grid),len(grid[0])
        path=set()
        islands=0
        def dfs(r,c):
            stack=[(r,c)]
            path.add((r,c))
            while stack:
                row,col=stack.pop()
                directions=[(-1, 0), (1, 0), (0, 1), (0, -1)]
                for dr,dc in directions:
                    nr,nc=row+dr,col+dc
                    if nr in range(rows) and nc in range(cols) and (nr,nc) not in path and grid[nr][nc]=='1':
                        stack.append((nr,nc)),path.add((nr,nc))
        for r in range(rows):
            for c in range(cols):
                if grid[r][c]=='1' and (r,c) not in path:
                    dfs(r,c)
                    islands+=1
        return islands
