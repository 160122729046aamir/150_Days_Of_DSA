"""
# Definition for a Node.
class Node:
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""

class Solution:
    def flatten(self, head: 'Optional[Node]') -> 'Optional[Node]':
        if not head: return head
        stack=[head]
        res=[]
        while stack:
            current=stack.pop()
            res.append(current.val)
            if current.next: stack.append(current.next)
            if current.child: stack.append(current.child)
        dummy=Node()
        tail=dummy
        prev=None
        for i in res: 
            tail.next=Node(i)
            tail.next.prev=prev
            prev=tail.next
            tail=tail.next
        return dummy.next
