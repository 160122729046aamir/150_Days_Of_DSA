"""
# Definition for a Node.
class Node:
    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):
        self.val = int(x)
        self.next = next
        self.random = random
"""

class Solution:
    def copyRandomList(self, head: 'Optional[Node]') -> 'Optional[Node]':
        if not head:
            return None
        dummy=Node(-1)
        tail=dummy
        current=head
        hashmap={}
        while current:
            tail.next=Node(current.val)
            tail=tail.next
            hashmap[current]=tail
            current=current.next
        current=head
        tail=dummy.next
        while current:
            if current.random:
                tail.random=hashmap[current.random]
            else:
                tail.random=None
            tail=tail.next
            current=current.next
        return dummy.next
